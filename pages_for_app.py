
import streamlit as st
import pandas as pd
from bert_model import process_and_display
from visualization import create_map

def page_bert():
    st.title("üîç HSE Legal BERT Platform")
    st.header("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ BERT –º–æ–¥–µ–ª–∏")
    st.write("–î–∞–≤–∞–π—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –æ–±—Ä–∞–±–æ—Ç–∞–µ–º...")

    uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ TXT —Ñ–∞–π–ª —Å –¥–µ–ª–æ–º", type=["txt"])
    
    texts = []
    
    if uploaded_file is not None:
        texts = uploaded_file.read().decode("utf-8")
        process_and_display(texts)
    else:
        if "user_input" not in st.session_state:
            st.session_state.user_input = ""
        user_input = st.text_area("Input:", value=st.session_state.user_input)
        st.session_state.user_input = user_input
        if user_input:
            process_and_display(user_input)

def page_map():
    st.title("üîç HSE Legal BERT Platform")
    st.header("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –∫–∞—Ä—Ç–∞—Ö")
    
    dataset1 = pd.read_csv(r"data/region_stats_named_all.csv", encoding='utf-8')
    dataset2 = pd.read_csv(r"data/region_stats_named_with_text.csv", encoding='utf-8')

    create_map(
        dataset1,
        "Viridis",
        "–í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –¥–µ–ª–∞"
    )
    create_map(
        dataset2,
        "Plasma",
        "–°–æ–¥–µ—Ä–∂–∞—â–∏–µ —Ç–µ–∫—Å—Ç"
    )

def page_about():
    st.title("üîç HSE Legal BERT Platform")
    st.header("–û –ø—Ä–æ–µ–∫—Ç–µ")
    st.markdown(
        """
        <p style="font-family: 'Times New Roman', Times, serif; font-size: 18px;">
        –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É–≥–æ–ª–æ–≤–Ω—ã—Ö –¥–µ–ª –∏ –≤—ã—è–≤–ª–µ–Ω–∏–µ –∏—Ö –≤–∞–∂–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ - —ç—Ç–æ –ø—Ä–æ–µ–∫—Ç, –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—É–¥–µ–±–Ω—ã—Ö –¥–µ–ª, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑—É–µ—Ç —É–¥–æ–±–Ω—É—é —Ä–∞–±–æ—Ç—É —Å fine tuning BERT-–º–æ–¥–µ–ª—å—é, –ø–æ–∑–≤–æ–ª—è—é—â–µ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–≤–ª–µ—á—å –∏ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å—É—â–Ω–æ—Å—Ç–∏ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Å—É–¥–µ–±–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ —Ä–µ–≥–∏–æ–Ω—ã, –¥–∞—Ç—ã, —Å—É–º–º—ã –∏ –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∑–Ω–∞—á–∏–º—ã–µ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
        </p>
        """,
        unsafe_allow_html=True
    )    
    st.subheader("–†–∞–±–æ—Ç–∞–ª–∏ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º ***–ö–∞–π—Ç—É–µ–≤ –ê–±–¥—É–ª–ª–∞***, ***–®–∞—Ä–∏–ø–æ–≤–∞ –ï–ª–µ–Ω–∞***, ***–õ–∞—Ä–∏—á–µ–≤–∞ –ê–ª–∏–Ω–∞***")
    st.subheader("[GitHub](https://github.com/persikaleshka/truth_of_the_matter)")